<?php

/**
 * BlogTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BlogTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object BlogTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Blog');
    }
    public function addBlog($customer_id, $platform_id,$product_id=0, $account_id, $weibo_id="", $contents="", $is_public=0){
        $blog = new Blog();
        $blog->setCustomerId($customer_id);
        $blog->setPlatformId($platform_id);
        $blog->setProductId($product_id);
        //$blog->setAccountId($account_id);
        $blog->setWeiboId($weibo_id);
        $blog->setContents($contents);
        $blog->setPublishAt(time());
        $blog->setIsPublic($is_public);
        $blog->save();
    }
    public function findBlogPublishResult($customer_id,$start_time,$end_time,$is_public){
        if($is_public==0){
            $all_platforms = Doctrine_Query::create()
                    ->select("ba.platform_id")
                    ->from("BlogAccount ba")
                    ->leftJoin("ba.Platform p")
                    ->where("p.is_enable=?",1)
                    ->andWhere("ba.customer_id=?",$customer_id)
                    ->fetchArray();
        }else{
            $all_platforms = Doctrine_Query::create()
                    ->select("pa.platform_id")
                    ->from("PublicAccount pa")
                    ->leftJoin("pa.Platform p")
                    ->where("p.is_enable=?",1)
                    ->fetchArray();
        }
        $all_platforms_ids = array();
        foreach ($all_platforms as $platform){
            array_push($all_platforms_ids, $platform["platform_id"]);
        }
        
        $bloglist = $this->getInstance()->createQuery("b")
                ->where("customer_id=?",$customer_id)
                ->andWhere("publish_at<=?",$end_time)
                ->andWhere("publish_at>=?",$start_time)
                ->fetchArray();
        $succes_platform_ids = array();
        foreach($bloglist as $blog){
            array_push($succes_platform_ids, $blog["platform_id"]);
        }
        if(count($succes_platform_ids)>0){
            $succes_platforms = Doctrine::getTable("Platform")->createQuery("p")
                    ->whereIn("p.id",$succes_platform_ids)
                    ->fetchArray();
        }else{
            $succes_platforms = array();
        }
        $fail_platform_ids = array_diff($all_platforms_ids, $succes_platform_ids);
        if(count($fail_platform_ids)>0){
            $fail_platforms = Doctrine::getTable("Platform")->createQuery("p")
                    ->whereIn("p.id",$fail_platform_ids)
                    ->fetchArray();
        }else{
            $fail_platforms = array();
        }
        return array(
            "success"=>$succes_platforms,
            "fail"=>$fail_platforms,
            "all_platforms_ids"=>$all_platforms_ids,
            "succes_platform_ids"=>$succes_platform_ids,
            "fail_platform_ids"=>$fail_platform_ids
        );
    }
}