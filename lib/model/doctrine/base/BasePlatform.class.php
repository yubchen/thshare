<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Platform', 'doctrine');

/**
 * BasePlatform
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $register_url
 * @property string $image
 * @property string $auth_action
 * @property integer $is_enable
 * @property Doctrine_Collection $Blog
 * @property Doctrine_Collection $BlogAccount
 * @property Doctrine_Collection $PublicAccount
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getDescription()   Returns the current record's "description" value
 * @method string              getRegisterUrl()   Returns the current record's "register_url" value
 * @method string              getImage()         Returns the current record's "image" value
 * @method string              getAuthAction()    Returns the current record's "auth_action" value
 * @method integer             getIsEnable()      Returns the current record's "is_enable" value
 * @method Doctrine_Collection getBlog()          Returns the current record's "Blog" collection
 * @method Doctrine_Collection getBlogAccount()   Returns the current record's "BlogAccount" collection
 * @method Doctrine_Collection getPublicAccount() Returns the current record's "PublicAccount" collection
 * @method Platform            setId()            Sets the current record's "id" value
 * @method Platform            setName()          Sets the current record's "name" value
 * @method Platform            setDescription()   Sets the current record's "description" value
 * @method Platform            setRegisterUrl()   Sets the current record's "register_url" value
 * @method Platform            setImage()         Sets the current record's "image" value
 * @method Platform            setAuthAction()    Sets the current record's "auth_action" value
 * @method Platform            setIsEnable()      Sets the current record's "is_enable" value
 * @method Platform            setBlog()          Sets the current record's "Blog" collection
 * @method Platform            setBlogAccount()   Sets the current record's "BlogAccount" collection
 * @method Platform            setPublicAccount() Sets the current record's "PublicAccount" collection
 * 
 * @package    tbshare
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlatform extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('platform');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('description', 'string', 512, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 512,
             ));
        $this->hasColumn('register_url', 'string', 256, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 256,
             ));
        $this->hasColumn('image', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('auth_action', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('is_enable', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Blog', array(
             'local' => 'id',
             'foreign' => 'platform_id'));

        $this->hasMany('BlogAccount', array(
             'local' => 'id',
             'foreign' => 'platform_id'));

        $this->hasMany('PublicAccount', array(
             'local' => 'id',
             'foreign' => 'platform_id'));
    }
}